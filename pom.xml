<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.0</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.dxc.eproc</groupId>
	<artifactId>catalogue-admin-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>catalogue-admin-service</name>
	<description>catalogue-admin-service</description>
	<properties>
		<java.version>15</java.version>
		<problem-spring.version>0.26.2</problem-spring.version>
		<problem-spring-web.version>${problem-spring.version}
		</problem-spring-web.version>
		<springfox.version>3.0.0</springfox.version>
		<org.json>20210307</org.json>
		<logstash-logback-encoder.version>6.6
		</logstash-logback-encoder.version>
		<project.testresult.directory>${project.build.directory}/test-results
		</project.testresult.directory>
		<sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M4
		</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M4
		</maven-failsafe-plugin.version>
		<mapstruct.version>1.3.1.Final</mapstruct.version>
		<spring-boot.version>2.5.0</spring-boot.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<junit.utReportFolder>${project.testresult.directory}/test
		</junit.utReportFolder>
		<junit.itReportFolder>${project.testresult.directory}/integrationTest
		</junit.itReportFolder>
		<jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
		<jacoco.utReportFolder>${project.build.directory}/jacoco/test
		</jacoco.utReportFolder>
		<jacoco.utReportFile>${jacoco.utReportFolder}/test.exec
		</jacoco.utReportFile>
		<jacoco.itReportFolder>${project.build.directory}/jacoco/integrationTest
		</jacoco.itReportFolder>
		<jacoco.itReportFile>${jacoco.itReportFolder}/integrationTest.exec
		</jacoco.itReportFile>
		<maven-checkstyle.version>3.0.0</maven-checkstyle.version>
		<checkstyle.version>8.32</checkstyle.version>
		<spring-nohttp-checkstyle.version>0.0.4.RELEASE
		</spring-nohttp-checkstyle.version>
		<sonar.java.checkstyle.reportPaths>./target/checkstyle-result.xml,
			./target/jacoco/test/jacoco.xml
		</sonar.java.checkstyle.reportPaths>
		<spring-cloud.version>2020.0.0-M6</spring-cloud.version>
	</properties>
	
	<dependencyManagement>
	    <dependencies>
	         <dependency>
	            <groupId>org.springframework.cloud</groupId>
	            <artifactId>spring-cloud-dependencies</artifactId>
	            <version>${spring-cloud.version}</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	    </dependencies>
	</dependencyManagement>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>

		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>problem-spring-web</artifactId>
			<version>${problem-spring-web.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hibernate5</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hppc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Swagger Starts -->
			<!-- <dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-bean-validators</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency> -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>3.0.0</version>
		</dependency>
		<!-- Swagger Ends -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.testng/testng -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>7.1.0</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-module-testng -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-testng</artifactId>
			<version>2.0.7</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2 -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>2.0.7</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${org.json}</version>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
			<groupId>org.amqphub.spring</groupId>
			<artifactId>amqp-10-jms-spring-boot-starter</artifactId>
			<version>2.2.7.redhat-00002</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>geronimo-jms_1.1_spec</artifactId>
					<groupId>org.apache.geronimo.specs</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-amqp</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.qpid</groupId>
					<artifactId>proton-j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock -->
		<dependency>
		    <groupId>com.github.tomakehurst</groupId>
		    <artifactId>wiremock</artifactId>
		    <version>2.27.2</version>
		    <scope>test</scope>
		</dependency>

		<!-- QueryDSL Start -->
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
		</dependency>
		<!-- QueryDSL End -->

		<!-- eProc Modules Starts -->
		<dependency>
			<groupId>com.dxc.eproc.common</groupId>
			<artifactId>eproc-common</artifactId>
			<version>0.0.1</version>
		</dependency>

		<dependency>
			<groupId>com.dxc.eproc</groupId>
			<artifactId>document-store</artifactId>
			<version>0.0.1</version>
		</dependency>

		<dependency>
			<groupId>com.dxc.eproc</groupId>
    		<artifactId>user-feign-client</artifactId>
    		<version>0.0.1</version>
		</dependency>

		<dependency>
			<groupId>com.dxc.eproc</groupId>
			<artifactId>master-feign-client</artifactId>
			<version>0.0.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.9</version>
		</dependency>

		<dependency>
        	<groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<!-- <plugin> <groupId>org.owasp</groupId> <artifactId>dependency-check-maven</artifactId> 
				<version>6.0.3</version> <executions> <execution> <goals> <goal>check</goal> 
				</goals> </execution> </executions> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<excludes>**/generated/**</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.3</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>src/main/generated</outputDirectory>
							<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor
							</processor>
							<packages>
								<package>com.dxc.eproc.catalogue.model</package>
							</packages>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<rules>
						<requireMavenVersion>
							<message>You are running an older version of Maven. It requires
								at least Maven ${maven.version}</message>
							<version>[${maven.version},)</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<message>You are running an incompatible version of Java. It
								requires JDK ${java.version}</message>
							<version>15</version>
						</requireJavaVersion>
					</rules>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>

			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<!-- <source>${java.version}</source> <target>${java.version}</target> -->
						<annotationProcessorPaths>
							<path>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-configuration-processor</artifactId>
								<version>${spring-boot.version}</version>
							</path>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct.version}</version>
							</path>

						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<mainClass>${start-class}</mainClass>
						<fork>true</fork>
						<!-- Enable the line below to have remote debugging of your application 
							on port 5005 <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments> -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- Force alphabetical order to have a reproducible build -->
						<!-- <runOrder>alphabetical</runOrder> -->
						<reportsDirectory>${junit.utReportFolder}</reportsDirectory>
						<excludes>
							<exclude>**/*IT*</exclude>
							<exclude>**/*IntTest*</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<!-- Due to spring-boot repackage, without adding this property test 
							classes are not found See https://github.com/spring-projects/spring-boot/issues/6254 -->
						<classesDirectory>${project.build.outputDirectory}
						</classesDirectory>
						<!-- Force alphabetical order to have a reproducible build -->
						<runOrder>alphabetical</runOrder>
						<reportsDirectory>${junit.itReportFolder}</reportsDirectory>
						<includes>
							<include>**/*IT*</include>
							<include>**/*IntTest*</include>
						</includes>
					</configuration>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
						<execution>
							<id>verify</id>
							<goals>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>pre-unit-tests</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${jacoco.utReportFile}</destFile>
							</configuration>
						</execution>
						<!-- Ensures that the code coverage report for unit tests is created 
							after unit tests have been run -->
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<dataFile>${jacoco.utReportFile}</dataFile>
								<outputDirectory>${jacoco.utReportFolder}</outputDirectory>
								<excludes>
									<exclude>com/dxc/eproc/catalogue/controller/**/*.class</exclude>
									<exclude>com/dxc/eproc/catalogue/model/**/Q*.class</exclude>
									<exclude>com/dxc/eproc/catalogue/mapper/**/*Impl.class</exclude>
									<exclude>com/dxc/eproc/catalogue/repository/impl/**/*.class</exclude>
									<exclude>com/dxc/eproc/utils/**/*.class</exclude>
									<exclude>com/dxc/eproc/catalogue/jms/**/*.class</exclude>
									<exclude>com/dxc/eproc/catalogue/*.class</exclude>
								</excludes>
							</configuration>
						</execution>
						<execution>
							<id>pre-integration-tests</id>
							<goals>
								<goal>prepare-agent-integration</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${jacoco.itReportFile}</destFile>
							</configuration>
						</execution>
						<!-- Ensures that the code coverage report for integration tests is 
							created after integration tests have been run -->
						<execution>
							<id>post-integration-tests</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>report-integration</goal>
							</goals>
							<configuration>
								<dataFile>${jacoco.itReportFile}</dataFile>
								<outputDirectory>${jacoco.itReportFolder}</outputDirectory>
								<excludes>
									<exclude>com/dxc/eproc/catalogue/model/**/Q*.class</exclude>
									<exclude>com/dxc/eproc/catalogue/mapper/**/*.class</exclude>
									<exclude>com/dxc/eproc/catalogue/*.class</exclude>
								</excludes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle.version}</version>
					<!-- <dependencies> <dependency> <groupId>com.puppycrawl.tools</groupId> 
						<artifactId>checkstyle</artifactId> <version>${checkstyle.version}</version> 
						</dependency> <dependency> <groupId>io.spring.nohttp</groupId> <artifactId>nohttp-checkstyle</artifactId> 
						<version>${spring-nohttp-checkstyle.version}</version> </dependency> </dependencies> -->
					<configuration>
						<configLocation>checkstyle.xml</configLocation>
						<excludes>.git/**/*,target/**/*,node_modules/**/*,node/**/*
						</excludes>
						<sourceDirectories>./</sourceDirectories>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>red-hat-ga</id>
			<url>https://maven.repository.redhat.com/ga</url>
		</repository>
		<repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
	</repositories>
	
	<distributionManagement>
	    <repository>
		<id>central</id>
		<name>DevCloudArtifactory-releases</name>
		<url>https://artifactory.dxc.com/artifactory/eprocurement-maven;status=unstable</url>
	    </repository>   
 	</distributionManagement>
</project>
